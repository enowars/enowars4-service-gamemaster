import time
import logging
import sys
import aiohttp
import asyncio
import random
import string

from pymongo import ASCENDING
from hashlib import sha256
from gamemasterlib import *
from logging import LoggerAdapter
from motor import MotorCollection
from faker import Faker
from csrandom import CSRandom
import traceback

ADDRESS = "enovm.stronk.pw"
PORT = 8001

def getusername(german_faker) -> str:
    return german_faker.first_name() + german_faker.last_name() + ''.join(random.choice(string.digits) for _ in range(10))
def getpassword(german_faker, username:str) -> str:
    return sha256(username.encode('utf-8')+"suchsecretmuchwow".encode('utf-8')).hexdigest()
    return "password"
def getemail(german_faker, username: str) -> str:
    return german_faker.free_email()

async def main():
    german_faker = Faker('de_DE')
    logger = logging.getLogger()
    handler = logging.StreamHandler(sys.stdout)
    logger.addHandler(handler)
    logger.setLevel(logging.DEBUG)
    client = await HttpInterface.setup(ADDRESS, PORT, logger)
    username = getusername(german_faker)
    password = getpassword(german_faker,username)
    email = getemail(german_faker,username)
    await client.register(username, email, password)
    print("Registered")
    res = await client.tokenadd()
    cs_gen = CSRandom(res)
    time.sleep(4)
    newUUID = []
    for n in range(0, 64):
        newUUID.append(f"%08x" % cs_gen.next_int())
    for n in range (0, 4096):
        await client.tokencheck("".join(newUUID))
        newUUID.append(f"%08x" % cs_gen.next_int())
        newUUID.pop(0)
        if ((n%128)==0): print ("Iterating: ",n)
    await client.close()


ev_loop = asyncio.new_event_loop()
asyncio.set_event_loop(ev_loop)
result = ev_loop.run_until_complete(main())


